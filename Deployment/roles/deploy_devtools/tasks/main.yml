---
# tasks file for deploy_jenkins
# - hosts: tag_Name_devtools
#   vars:
#     ansible_ssh_private_key_file: "/Users/admin/awskey/testkp.pem"
#     ansible_ssh_user: "ubuntu"
    
#   become: yes
#   tasks:
    - name: Ensure dependencies are installed.
      apt:
        name:
        - curl
        - apt-transport-https
        - openjdk-8-jdk
        state: present
    - name: Create Jenkins group
      group:
        name: "{{ jenkins_config_group }}"
        state: present

    - name: Create Jenkins user
      user:
        name: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"
        home: "{{ jenkins_home }}"
        shell: "/bin/false"
        state: present

    - name: Add Jenkins apt repository key.
      apt_key:
        url: "https://pkg.jenkins.io/debian/jenkins.io.key"
        state: present

    - name: Add Jenkins apt repository.
      apt_repository:
        repo: "deb http://pkg.jenkins-ci.org/debian binary/"
        state: present
        update_cache: true

    - name: install jenkins
      apt:
        update_cache: yes
        name: jenkins
        state: present
    - name: stop jenkins
      service:
        name: jenkins
        state: stopped

    - name: Set JENKINS_HOME
      lineinfile:
        dest: /etc/default/jenkins
        line: "JENKINS_HOME={{ jenkins_home }}"
        regexp: '^JENKINS_HOME='

    - name: Set Jenkins port
      lineinfile:
        dest: /etc/default/jenkins
        regexp: '^HTTP_PORT='
        line: "HTTP_PORT={{ jenkins_port }}"

    - name: Create initialization scripts directory
      file: path={{ jenkins_home }}/init.groovy.d
        state=directory
        owner=jenkins
        group=jenkins
        mode=0775    
        
    - name: Add initialization script to setup basic security
      template: src=security.groovy.j2
            dest={{ jenkins_home }}/init.groovy.d/security.groovy
            owner=jenkins
            group=jenkins
            mode=0775   

    - name: Jenkins - configure | Turn off Jenkins setup wizard
      lineinfile: 
          dest=/etc/default/jenkins 
          regexp='^JENKINS_JAVA_OPTIONS=' 
          line='JENKINS_JAVA_OPTIONS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"'
      notify: restart jenkins
    
    - name: Ensure correct ownership of JENKINS_HOME directory
      file:
        path: "{{ jenkins_home }}"
        owner: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"
        mode: 0755
        state: directory

    - name: Configuration file is up to date (config.xml)
      template:
        src: "{{ jenkins_source_config_xml }}"
        dest: "{{ jenkins_home }}/config.xml"
        mode: 0644
        owner: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"

    - name: Configure Jenkins location
      template:
        src: files/jenkins.model.JenkinsLocationConfiguration.xml.j2
        dest: "{{ jenkins_home }}/jenkins.model.JenkinsLocationConfiguration.xml"
        mode: 0644
        owner: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"

    - name: Start the server
      service:
        name: jenkins
        state: started

    - name: Wait for Jenkins to start up
      uri:
        url: http://localhost:8080
        status_code: 200
        user: "{{ jenkins_admin_username }}"
        password: "{{ jenkins_admin_password }}"
        timeout: 5
        force_basic_auth: yes
      register: jenkins_service_status
      retries: 10
      delay: 5
      until: >
        'status' in jenkins_service_status and
        jenkins_service_status['status'] == 200
        
    - name: Install plugins
      jenkins_plugin:
        name: "{{ item }}"
        jenkins_home: "{{ jenkins_home }}"
        owner: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"
        url: "{{ jenkins_url }}:{{ jenkins_port }}"
        timeout: "{{ jenkins_plugin_timeout }}"
      with_items: "{{ jenkins_plugins }}"

    - name: stop jenkins
      service:
        name: jenkins
        state: stopped

    # - name: Job directories are present
    #   file:
    #     path: "{{ jenkins_home }}/jobs/{{ item }}"
    #     state: directory
    #     mode: 0777
    #   with_items: "{{ jenkins_jobs }}"

    # - name: Jobs are present
    #   copy:
    #     src: "{{ jenkins_source_dir_jobs }}/{{ item }}/config.xml"
    #     dest: "{{ jenkins_home }}/jobs/{{ item }}/config.xml"
    #     mode: 0777
    #   with_items: "{{ jenkins_jobs }}"

    - name: Ensure correct ownership of JENKINS_HOME directory
      file:
        path: "{{ jenkins_home }}"
        owner: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"
        mode: 0755
        recurse: yes
        state: directory


    - name: Start the server
      service:
        name: jenkins
        state: started
