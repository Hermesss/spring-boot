---
# tasks file for deploy_jenkins
# - hosts: tag_Name_devtools
#   vars:
#     ansible_ssh_private_key_file: "/Users/admin/awskey/testkp.pem"
#     ansible_ssh_user: "ubuntu"
    
#   become: yes
#   tasks:
    - name: Ensure dependencies are installed.
      apt:
        name:
        - curl
        - apt-transport-https
        - openjdk-8-jdk
        - git
        - ansible
        state: present
    - name: Checking if Maven is already installed
      stat: 
        path: '{{ maven_home_parent_directory }}/apache-maven-{{ maven_version }}'
      register: maven_installed

    - name: Downloading Maven Binaries
      get_url:
        url: '{{ maven_download_url }}'
        dest: '{{ maven_home_parent_directory }}/{{ maven_file_name }}'
        url_username: '{{ maven_download_username }}'
        url_password: '{{ maven_download_password }}'
      #when: not maven_installed.stat.exists

    - name: Unarchive Maven Binaries
      unarchive:
        src: '{{ maven_home_parent_directory }}/{{ maven_file_name }}'
        dest: '{{ maven_home_parent_directory }}'
        copy: no
      #when: not maven_installed.stat.exists

    - name: Remove old path configuration
      file:
        path: /etc/profile.d/maven.sh
        state: absent

    - name: Maven path configuration
      lineinfile:
        dest: /etc/profile.d/maven.sh
        line: '{{ item.line }}'
        create: yes
        state: present
      with_items:
        - { line: 'M2_HOME={{ maven_home_parent_directory }}/apache-maven-{{ maven_version }}' }
        - { line: 'PATH=$PATH:$M2_HOME/bin' }

    - name: Cleaning Up
      file:
        state: absent
        path: '{{ maven_home_parent_directory }}/{{ maven_file_name }}'

    - name: Create Jenkins group
      group:
        name: "{{ jenkins_config_group }}"
        state: present

    - name: Create Jenkins user
      user:
        name: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"
        home: "{{ jenkins_home }}"
        shell: "/bin/false"
        state: present

    - name: Add Jenkins apt repository key.
      apt_key:
        url: "https://pkg.jenkins.io/debian/jenkins.io.key"
        state: present

    - name: Add Jenkins apt repository.
      apt_repository:
        repo: "deb http://pkg.jenkins-ci.org/debian binary/"
        state: present
        update_cache: true

    - name: install jenkins
      apt:
        update_cache: yes
        name: jenkins
        state: present

    - name: stop jenkins
      service:
        name: jenkins
        state: stopped

    - name: Set JENKINS_HOME
      lineinfile:
        dest: /etc/default/jenkins
        line: "JENKINS_HOME={{ jenkins_home }}"
        regexp: '^JENKINS_HOME='

    - name: Set Jenkins port
      lineinfile:
        dest: /etc/default/jenkins
        regexp: '^HTTP_PORT='
        line: "HTTP_PORT={{ jenkins_port }}"

    - name: Create initialization scripts directory
      file: 
        path={{ jenkins_home }}/init.groovy.d
        state=directory
        owner="{{ jenkins_config_owner }}"
        group="{{ jenkins_config_group }}"
        mode=0775    
        
    - name: Add initialization script to setup basic security
      template: 
        src=security.groovy.j2
        dest={{ jenkins_home }}/init.groovy.d/security.groovy
        owner="{{ jenkins_config_owner }}"
        group="{{ jenkins_config_group }}"
        mode=0775   

    - name: Jenkins - configure | Turn off Jenkins setup wizard
      lineinfile: 
        dest=/etc/default/jenkins 
        regexp='^JENKINS_JAVA_OPTIONS=' 
        line='JENKINS_JAVA_OPTIONS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"'
      notify: restart jenkins
    
    - name: Ensure correct ownership of JENKINS_HOME directory
      file:
        path: "{{ jenkins_home }}"
        owner: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"
        mode: 0755
        state: directory

    - name: Configuration file is up to date (config.xml)
      template:
        src: "{{ jenkins_source_config_xml }}"
        dest: "{{ jenkins_home }}/config.xml"
        mode: 0644
        owner: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"
    
    - name: Configuration file is up to date (mvn_config.xml)
      template:
        src: "{{ jenkins_source_mvnconfig_xml }}"
        dest: "{{ jenkins_home }}/hudson.tasks.Maven.xml"
        mode: 0644
        owner: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"

    - name: Configure Jenkins location
      template:
        src: files/jenkins.model.JenkinsLocationConfiguration.xml.j2
        dest: "{{ jenkins_home }}/jenkins.model.JenkinsLocationConfiguration.xml"
        mode: 0644
        owner: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"

    - name: Start the server
      service:
        name: jenkins
        state: started

    - name: wait for service to boot
      uri:
        url: "http://localhost:8080/"
        status_code: 200
        validate_certs: False
      register: result
      until: result | succeeded
      retries: 8
      delay: 20
      ignore_errors: yes
        
    - name: Install plugins
      jenkins_plugin:
        name: "{{ item }}"
        jenkins_home: "{{ jenkins_home }}"
        owner: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"
        url: "{{ jenkins_url }}:{{ jenkins_port }}"
        timeout: "{{ jenkins_plugin_timeout }}"
        url_username: "{{ jenkins_admin_username }}"
        url_password: "{{ jenkins_admin_password }}"
      with_items: "{{ jenkins_plugins }}"

    - name: stop jenkins
      service:
        name: jenkins
        state: stopped

    - name: Job directories are present
      file:
        path: "{{ jenkins_home }}/jobs/{{ item }}"
        state: directory
        mode: 0777
      with_items: "{{ jenkins_jobs }}"

    - name: Jobs are present
      copy:
        src: "{{ jenkins_source_dir_jobs }}/{{ item }}/config.xml"
        dest: "{{ jenkins_home }}/jobs/{{ item }}/config.xml"
        mode: 0777
      with_items: "{{ jenkins_jobs }}"

    - name: Ensure correct ownership of JENKINS_HOME directory
      file:
        path: "{{ jenkins_home }}"
        owner: "{{ jenkins_config_owner }}"
        group: "{{ jenkins_config_group }}"
        mode: 0755
        recurse: yes
        state: directory


    - name: Start the server
      service:
        name: jenkins
        state: started
  
    - name: Create ansible hosts directory
      file: 
          path=/etc/ansible
          state=directory
          owner={{ jenkins_config_owner }}
          group={{ jenkins_config_owner }}
          mode=0775 

    - name: create hosts file
      file: 
          path=/etc/ansible/hosts
          state=touch
          owner=root
          group=root
          mode=0775

    - name: fill in ansible hosts file on devtools
      become: yes
      lineinfile:
        dest: /etc/ansible/hosts
        insertbefore: BOF
        line: "[all:vars]\nansible_ssh_private_key_file={{ jenkins_home }}/testkp.pem\nansible_user=ubuntu"
        state: present  

    - name: fill in ansible hosts file on devtools
      become: yes
      lineinfile:
        dest: /etc/ansible/hosts
        regexp: '.*{{ item }}$'
        line: "[{{hostvars[item]['ec2_tag_Name']}}]\n{{ hostvars[item].ansible_host }}"
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.all }}"

    - name: copy AWS KP file
      copy: 
        src: ~/awskey/testkp.pem
        dest: "{{ jenkins_home }}/testkp.pem"
        owner: jenkins
        group: jenkins
        mode: '0600'